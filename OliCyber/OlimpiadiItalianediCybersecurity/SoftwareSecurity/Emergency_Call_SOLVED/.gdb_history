break main
r
ni
break syscall
break *syscall
catch syscall
r
info registers 
c
info registers 
ni
q
f
r
stack 24
frame 
backtrace
f 4
f 2
stack 24
f 3
stack 2
stack 24
bt
f 0
f 1
stack 24
f 0
stack 24
stack 2
f 2
stack 24
stack 3
f 3
stack 100
f 4
stack 100
r < <(python3 -c 'print(b'A'*40)')
r < <(python3 -c 'print(b'A'*40)')
r
r
r
c
q
r < <(python3 -c 'print(b'A'*40)')
q
c
follow-fork-mode
c
stack 100
d
stack 100
ni
ni
r
c
c
c
c
pwn cyclic -l 6161616b
pwn cyclic -l0x 6161616b
pwn cyclic -l 0x6161616b
cyclic -l 0x6161616b
!pwn cyclic -l 6161616b
!pwn cyclic -l 0x6161616b
c
catch syscall
c
c
c
c
c
c
c
c
c
c
c
c
c
ni
ni
x/8x 0x7ffe7c20c6d0
stack 24
x/x $rbp-20
x/x $rbp-0x20
c
r
r < <(./emergency-call)
r ./emergency-call
catch syscall
r
ni
c
ni
c
ni
c
break *00401031
d 1
b
b *0x00401031
b l
b
breaks
b
f
b
break *0x00401031
r
break *0x00401031
c 3
r
c 3
r
c 2
ni
ni
info registers 
stack 24
break *0x00401031
r
c 2
ni
ni
b
stack 8
ni
stack 8
b *0x00401031
r
c
c
c
ni
checksec
clear
