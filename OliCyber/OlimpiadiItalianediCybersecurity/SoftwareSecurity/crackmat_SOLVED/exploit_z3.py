from z3 import *

solver = Solver()

flag = Ints([str(f'charAt_{i}') for i in range(24)])
print(flag)

solver.add(flag[0x13] * -0xfa + flag[0x13] * flag[0x13] == -0x3d09)
solver.add(flag[0x12] * -0x60 + flag[0x12] * flag[0x12] == -0x900)
solver.add(flag[0x11] * -0xbe + flag[0x11] * flag[0x11] == -0x2341)
solver.add(flag[0x10] * -0xca + flag[0x10] * flag[0x10] == -0x27d9)
solver.add(flag[0xf] * -0xe8 + flag[0xf] * flag[0xf] == -0x3490)
solver.add(flag[0xe] * -0xdc + flag[0xe] * flag[0xe] == -0x2f44)
solver.add(flag[0xd] * -0xc2 + flag[0xd] * flag[0xd] == -0x24c1)
solver.add(flag[0xc] * -0xdc + flag[0xc] * flag[0xc] == -0x2f44)
solver.add(flag[0xb] * -0xd2 + flag[0xb] * flag[0xb] == -0x2b11)
solver.add(flag[10] * -0xda + flag[10] * flag[10] == -0x2e69)
solver.add(flag[9] * -0xe4 + flag[9] * flag[9] == -0x32c4)
solver.add(flag[8] * -0xca + flag[8] * flag[8] == -0x27d9)
solver.add(flag[7] * -0xe8 + flag[7] * flag[7] == -0x3490)
solver.add(flag[6] * -0x66 + flag[6] * flag[6] == -0xa29)
solver.add(flag[5] * -200 + flag[5] * flag[5] == -10000)
solver.add(flag[4] * -0xf6 + flag[4] * flag[4] == -0x3b19)
solver.add(flag[3] * -0xce + flag[3] * flag[3] == -0x2971)
solver.add(flag[2] * -0xc2 + flag[2] * flag[2] == -0x24c1)
solver.add(flag[1] * -0xd8 + flag[1] * flag[1] == -0x2d9)
solver.add(flag[0] * -0xcc + flag[0] * flag[0] == -0x28a4)

print(flag)
print(solver)

if not solver.check():
    print("No solution")
    exit(0)

m = solver.model()

print(m)