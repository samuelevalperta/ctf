#!/usr/bin/python3

import angr
import claripy

base_address = 0x0100000

success_add = 0x00101bc0
failure_add = [0x00101c2b, 0x00101c39, 0x0101c47, 0x101c55]

code_len = 16

proj = angr.Project("./door-code", main_opts = {"base_addr" : base_address})

code_chars = [claripy.BVS(f"code_char{i}", 8) for i in range(code_len)]
code = claripy.Concat(*code_chars + [claripy.BVV(b"\n")])

state = proj.factory.full_init_state(
    args = ["./door-code"],
    add_options = angr.options.unicorn,
    stdin=code
)


for c in code_chars:
    # state.solver.add((k >= ord('0') and k <= ord('9')) or (k >= ord('a') and k <= ord('f')))
    state.solver.add( c >= ord("!"))
    state.solver.add( c <= ord("~"))

simgr = proj.factory.simulation_manager(state)
simgr.explore(find=success_add, avoid=failure_add)

if(len(simgr.found) > 0):
    for found in simgr.found:
        printf(found.posix.dumps(0))